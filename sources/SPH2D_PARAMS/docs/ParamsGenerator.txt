SPH2DParamsGenerator (˜˜˜˜˜˜˜˜˜ ˜˜˜˜˜˜˜˜˜˜)

1) ˜˜˜˜˜˜˜ ˜˜˜˜˜˜:
- ˜˜˜˜˜˜˜˜˜˜ ˜˜˜˜˜ ˜˜˜˜˜˜˜˜˜˜ ˜˜˜˜˜˜, ˜˜ ˜˜˜˜˜˜ ˜˜˜˜˜˜˜˜˜˜˜˜
- ˜˜˜˜˜˜˜˜ ˜˜ ˜˜˜˜ ˜˜˜˜˜˜˜˜˜ ˜˜˜˜˜˜
2) ˜˜˜˜˜˜˜˜ ˜˜˜˜˜˜:
- Params.json
3) ˜˜˜˜˜˜˜˜˜ ˜˜˜˜˜˜˜˜˜˜:

    Density
    optional:
        - density_treatment { continuity } = ˜˜˜˜˜ ˜˜˜˜˜˜˜˜˜ ˜˜˜˜˜˜˜˜˜
        - density_normalization { none } = ˜˜˜˜˜˜˜˜˜˜˜˜ ˜˜˜˜˜˜˜˜˜, ˜˜ ˜˜˜˜˜˜˜˜˜˜˜
        - density_skf { cubic } = ˜˜˜˜˜˜˜˜˜˜˜˜ ˜˜˜˜ ˜˜˜ ˜˜˜˜˜˜˜˜˜
    
    Internal Force
    mandatory:
        - intf_hsml_coef { 1 } = ˜˜˜˜˜˜˜˜˜˜˜ ˜˜˜˜˜ ˜˜˜˜˜˜˜˜˜˜˜ (hsml = delta * intf_hsml_coef)
        - eos_sound_vel_method: = ˜˜˜˜˜ ˜˜˜˜˜˜˜˜˜˜ ˜˜˜˜˜˜˜˜˜˜˜˜˜ ˜˜˜˜˜˜˜˜ ˜˜˜˜˜
            specific -> eos_sound_vel = ˜˜˜˜˜˜ ˜˜˜˜˜˜˜˜ ˜˜˜˜˜
            dam_break -> eos_sound_vel_coef = ˜˜˜˜˜ ˜˜˜˜˜˜˜˜˜˜˜ ˜˜˜˜˜˜˜˜ ˜˜˜˜˜
    optional:
        - intf_sph_approximation { 2 } = ˜˜˜˜˜ ˜˜˜˜˜˜˜˜˜˜˜˜˜ ˜˜˜˜˜˜ (1 - ˜˜ ˜˜˜˜˜˜˜˜˜˜˜ ˜ CL ˜˜˜˜˜˜)
        - intf_skf { cubic } = ˜˜˜˜˜˜˜˜˜˜˜˜ ˜˜˜˜ ˜˜˜ ˜˜˜˜˜˜˜˜
        
    Viscosity
    optional:
        - visc { true } = ˜˜˜˜˜˜˜˜˜˜˜˜ ˜˜˜˜˜˜˜˜˜˜˜˜ ˜˜˜˜˜˜˜˜
        - visc_coef { 0.001 } = ˜˜˜˜˜˜˜˜˜˜˜ ˜˜˜˜˜˜˜˜˜˜˜˜ ˜˜˜˜˜˜˜˜

    Artificial Viscosity
    optional:
        - artificial_viscosity { false }: = ˜˜˜˜˜˜˜˜˜˜˜˜ ˜˜˜˜˜˜˜˜˜˜˜˜˜ ˜˜˜˜˜˜˜˜
            true -> artificial_shear_visc = ˜˜˜˜˜˜˜˜˜˜˜ alpha ˜ ˜˜˜˜˜˜˜˜˜ (˜˜˜˜˜˜ 0.01 .. 0.1)
            true -> artificial_bulk_visc = ˜˜˜˜˜˜˜˜˜˜˜ beta ˜ ˜˜˜˜˜˜˜˜˜ (˜˜˜˜˜˜ 0 ˜˜˜ ˜˜˜˜˜˜˜˜)
        - artificial_viscosity_skf = ˜˜˜˜˜˜˜˜˜˜˜˜ ˜˜˜˜ ˜˜˜ ˜˜˜˜˜˜˜˜˜˜˜˜˜ ˜˜˜˜˜˜˜˜

    Average Velocity
    optional:
        - average_velocity { false }: = ˜˜˜˜˜˜˜˜˜˜˜˜ ˜˜˜˜˜˜˜˜˜˜ ˜˜˜˜˜˜˜˜ (XSPH)
            true -> average_velocity_coef = ˜˜˜˜˜˜˜˜˜˜˜ ˜˜˜˜˜˜˜˜˜˜ ˜˜˜˜˜˜˜˜ (˜˜˜˜˜˜ ˜˜ 0.3)
        - average_velocity_skf { cubic } = ˜˜˜˜˜˜˜˜˜˜˜˜ ˜˜˜˜ ˜˜˜ ˜˜˜˜˜˜˜˜˜˜ ˜˜˜˜˜˜˜˜

    Stepping
    optional:
        - use_dump { false } = ˜˜˜˜˜˜˜˜˜ ˜˜˜˜˜˜ ˜˜˜ ˜˜˜˜˜˜˜˜˜˜˜˜˜ ˜˜˜˜˜˜˜
        - step_treatment { step }: = ˜˜˜˜˜˜ ˜˜˜ ˜˜˜˜˜˜ ˜˜˜˜˜˜ ˜ ˜˜˜˜ ˜˜˜˜˜˜˜˜˜ ˜˜˜˜, ˜˜˜˜ ˜˜ ˜˜˜˜˜˜˜
            time -> save_time = ˜˜˜ ˜˜˜˜˜˜ ˜˜˜˜˜˜
            time && use_dump -> dump_time { 0 } = ˜˜˜ ˜˜˜˜˜˜ ˜˜˜˜˜˜ ˜˜˜ ˜˜˜˜˜˜˜˜˜˜˜˜˜ ˜˜˜˜˜˜˜
            step -> save_step = ˜˜˜˜˜ ˜˜˜˜˜˜ ˜˜˜˜˜˜
            step && use_dump -> dump_step { 0 } = ˜˜˜˜˜ ˜˜˜˜˜˜ ˜˜˜˜˜˜ ˜˜˜ ˜˜˜˜˜˜˜˜˜˜˜˜˜ ˜˜˜˜˜˜˜
        - use_custom_time_estimate_step { false } = ˜˜˜˜˜˜˜˜˜˜˜˜ ˜˜˜˜˜˜ ˜˜˜ ˜˜˜˜˜˜ ˜˜˜˜˜˜˜˜˜˜ ˜ ˜˜˜˜ ˜˜˜˜˜˜˜˜˜˜
            true -> step_time_estimate
            false = ˜˜˜˜˜ ˜˜˜˜˜˜˜˜˜˜ ˜˜˜˜˜ ˜˜˜˜˜˜˜˜˜˜˜˜ ˜ ˜˜˜˜˜˜˜ ˜˜˜˜˜˜
        
    Consistency:
    optional:
        - consistency_check { true }: = ˜˜˜˜˜˜˜˜˜˜˜˜ ˜˜˜˜˜˜˜˜ ˜˜˜˜˜˜˜˜˜˜˜
        - consistency_check_step { 1 } = ˜˜˜ ˜˜˜˜˜˜˜˜ ˜˜˜˜˜˜˜˜˜˜˜
        - consistency_treatment { stop } = ˜˜˜˜˜˜˜˜˜ ˜˜˜˜˜˜˜˜˜˜˜ (˜˜˜˜˜ ˜˜ ˜˜˜˜˜, ˜˜˜˜˜˜˜˜˜, ˜˜˜˜ ˜˜˜˜˜˜˜˜˜˜˜, ˜˜˜˜˜˜˜˜ ˜˜ ˜˜ ˜˜˜)

    Boundaries:
    mandatory:
        - boundary_treatment = ˜˜˜˜˜ ˜˜˜˜˜˜˜˜˜ ˜˜˜˜˜˜

    Waves Generator:
    optional: 
        - nwm { no_waves }: = ˜˜˜˜˜ ˜˜˜˜˜˜˜˜˜ ˜˜˜˜
            rzm, impulse -> err = ˜˜˜˜˜˜ ˜˜ ˜˜˜˜˜˜˜˜˜˜˜
            dynamic -> nwm_nwm_wave_length = ˜˜˜˜˜ ˜˜˜˜˜
            dynamic -> nwm_wave_magnitude = ˜˜˜˜˜˜˜˜˜ ˜˜˜˜˜
            dynamic -> nwm_piston_magnitude (optional) = ˜˜˜˜˜˜˜˜˜ ˜˜˜˜˜˜ ˜˜˜ ˜˜˜˜˜˜˜˜˜˜˜˜ ˜˜˜˜˜˜
        - nwm_wait { 0 } = ˜˜˜˜˜˜˜˜ ˜˜˜˜˜˜˜˜˜˜ ˜˜˜˜ ˜˜˜˜˜ ˜˜˜˜˜˜˜ ˜˜˜˜˜˜

    Time Integration:
    mandatory:
        - simulation_time = ˜˜˜˜˜˜ ˜˜˜˜˜ ˜˜˜˜˜˜˜˜˜˜˜˜˜ ˜ ˜˜˜˜˜˜˜˜
    optional:
        - dt_correction_method { dynamic } = ˜˜˜˜˜ ˜˜˜˜˜˜˜˜˜ ˜˜˜˜ ˜˜˜˜˜˜˜˜˜˜˜˜˜˜
            dynamic -> err = ˜˜˜˜˜ ˜˜ ˜˜˜˜˜˜˜˜˜˜
            const_CFL -> CFL_coef = ˜˜˜˜˜˜˜˜˜˜˜˜ ˜˜˜˜˜˜ ˜˜˜˜ ˜˜ ˜˜˜˜˜˜˜ ˜˜ ˜˜˜˜˜˜˜˜ ˜˜˜˜˜
            const_value -> dt = ˜˜˜ ˜˜ ˜˜˜˜˜˜˜

    Extra:
    optional:
        - max_neighbours { 64 } = ˜˜˜˜˜˜˜˜˜˜˜˜ ˜˜˜˜˜˜˜˜˜˜ ˜˜˜˜˜˜˜˜ ˜˜˜˜˜˜ (˜˜˜˜˜˜ ˜˜˜˜˜˜)
        - local_threads: = ˜˜˜˜˜˜˜˜˜˜ ˜˜˜˜˜˜˜˜˜ ˜˜˜˜˜˜˜
            SPH2D_OMP -> 64 
            SPH2D_CL -> 256

    Output:
    mandatory:
        - save_velocity
        - save_pressure
        - save_density